name: Build, static analysis, tests & upload

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - '*'
    branches:
      - master

jobs:
  test_and_build_wheels:
    name: Static analysis, tests and wheel build
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Use Python 3.10.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.11"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: "./requirements.txt"

      - name: Setup env
        run: ./setup_venv.ps1

      - name: Run linting on all files
        run: |
          ./activate_venv.ps1
          pre-commit run --all-files --show-diff-on-failure

      - name: Build wheel
        run: |
          ./activate_venv.ps1
          python -m build

      - uses: actions/upload-artifact@v4
        with:
          name: h5view-wheels
          path: dist/*

  build:
    name: Executable build
    needs: test_and_build_wheels
    if: contains(github.event.head_commit.message, '[build]') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags'))
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Use Python 3.10.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.11"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: "./requirements.txt"

      - name: Setup env
        run: |
          pip install -r requirements.txt
          pip install .

      - uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: h5view
          onefile: true
          enable-plugins: pyside6
          include-package: h5view
          user-package-configuration-file: user.nuitka-package.config.yml
          include-qt-plugins: sensible
          macos-create-app-bundle: true

      - uses: actions/upload-artifact@v4
        with:
          name: h5view-${{ runner.os }}-exe
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*

  upload-pypi:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    environment:
      name: pypi
      url: https://pypi.org/p/h5view
    permissions:
      id-token: write
    concurrency:
      group: "deploy-pypi"
      cancel-in-progress: false
    steps:
      - name: "Download wheels"
        uses: actions/download-artifact@v4
        with:
          name: h5view-wheels
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  upload-github:
    name: Upload to GitHub
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    environment:
      name: github-release
      url: ${{ steps.deployment.outputs.url }}
    concurrency:
      group: "deploy-github"
      cancel-in-progress: false
    steps:
      - name: "Download wheels"
        uses: actions/download-artifact@v4
        with:
          name: h5view-wheels
          path: dist

      - name: "Download exe"
        uses: actions/download-artifact@v4
        with:
          pattern: h5view-*-exe
          merge-multiple: true
          path: exes

      - name: Zip MacOS bundle
        run: |
          cd exes
          zip -r h5view.app.zip h5view.app

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            exes/*
          generate_release_notes: true
          id: deployment
